// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  ID_user            Int       @id @default(autoincrement())
  Username           String
  Email              String    @unique
  Password           String
  Mobile_number      String?
  Position           String?
  Role               String    @default("customer")
  Picture            String?
  Status             String    @default("active")
  Token              String?   @db.Text
  Created_at         DateTime  @default(now())
  Updated_at         DateTime  @updatedAt
  Deleted_at         DateTime?
  ResetPasswordToken String?   @db.Text
  ResetTokenExpires  DateTime?
  
  // Relasi ke Project
  Projects           Project[] @relation("UserProjects")

  // Relasi ke Project_Talent
  Project_Talents    Project_Talent[] @relation("UserTalents")
}

model Project {
  ID_project        Int       @id @default(autoincrement())
  ID_user           Int       
  Image             String?
  Project_title     String    @unique
  Platform          String
  Deadline          DateTime
  Status            String?   // Tambahkan properti Status jika belum ada
  Created_at        DateTime  @default(now())
  Updated_at        DateTime  @updatedAt
  Deleted_at        DateTime?

  // Relasi ke User
  user              User      @relation(fields: [ID_user], references: [ID_user], name: "UserProjects")

  // Relasi ke Project_Talent
  talents           Project_Talent[] @relation("ProjectTalents")

  // Relasi ke Project_Checkpoint
  checkpoints     Project_Checkpoint[]  @relation("ProjectCheckpoints")
}

model Project_Talent {
  ID_talent         Int       @id @default(autoincrement())
  ID_project        Int       
  ID_user           Int       
  Created_at        DateTime  @default(now())
  Updated_at        DateTime  @updatedAt
  Deleted_at        DateTime?

  // Relasi ke User
  user              User      @relation(fields: [ID_user], references: [ID_user], name: "UserTalents")
  
  // Relasi ke Project
  project           Project   @relation(fields: [ID_project], references: [ID_project], name: "ProjectTalents")
}

model Project_Checkpoint {
  ID_checkpoint           Int                               @id @default(autoincrement())
  ID_project              Int
  Checkpoint_title        String
  Description             String
  Created_at              DateTime                          @default(now())
  Updated_at              DateTime                          @updatedAt
  Deleted_at              DateTime?

  // Relasi ke Project
  project                 Project                           @relation(fields: [ID_project], references: [ID_project], name: "ProjectCheckpoints")

  // Relasi ke Project_Checkpoint_Attachment
  attachments             Project_Checkpoint_Attachment[]   @relation("CheckpointAttachments")
}

model Project_Checkpoint_Attachment {
  ID_attachment           Int                               @id @default(autoincrement())
  ID_checkpoint           Int
  Url                     String
  Created_at              DateTime                          @default(now())
  Updated_at              DateTime                          @updatedAt
  Deleted_at              DateTime?

  // Relasi ke Project_Checkpoint
  checkpoint              Project_Checkpoint                @relation(fields: [ID_checkpoint], references: [ID_checkpoint], name: "CheckpointAttachments")
}